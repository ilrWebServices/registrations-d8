<?php

/**
 * @file
 * Contains ilr_registrations.module.
 */

use Drupal\Core\Entity\EntityInterface;
use Drupal\commerce_price\Price;
use Drupal\commerce_store\Entity\Store;

/**
 * Implements hook_entity_type_alter().
 *
 * Add the 'salesforce' link template to the commerce_product_variation entity.
 * This will be unnecessary once commerce is patched to add a `canonical` link
 * template to the ProductVariation entity. To know why that has to happen, see
 * salesforce_mapping_entity_type_alter().
 */
function ilr_registrations_entity_type_alter(array &$entity_types) {
  /** @var $entity_types \Drupal\Core\Entity\EntityTypeInterface[] */
  if (isset($entity_types['commerce_product_variation'])) {
    $entity_types['commerce_product_variation']->setLinkTemplate('salesforce', "/commerce_product_variation/{commerce_product_variation}/salesforce");
  }
}

/**
 * Implements hook_ENTITY_TYPE_presave().
 *
 * Fix the price of commerce_product_variations imported by salesforce.
 */
function ilr_registrations_commerce_product_variation_presave(EntityInterface $entity) {
  // Update the price property if there is a value from the sf mapping.
  if (isset($entity->field_class_price->first()->value)) {
    $salesforce_price_string = (string) $entity->field_class_price->first()->value;
    $entity->price = new Price($salesforce_price_string, 'USD');
  }
}

/**
 * Implements hook_ENTITY_TYPE_presave().
 *
 * Ensure that `commerce_product`s imported by salesforce use the default store.
 */
function ilr_registrations_commerce_product_presave(EntityInterface $entity) {
  // If this product has a store assigned, it's fine.
  if (count($entity->getStoreIds()) > 0) {
    return;
  }

  // Get the default store.
  $default_store = \Drupal::service('commerce_store.default_store_resolver')->resolve();

  // Just bail if there is no default store. That should only happen if an
  // admin deleted it.
  if (!$default_store) {
    return;
  }

  // Set the default store for this storeless product.
  $entity->stores = [
    'target_id' => $default_store->id(),
  ];
}

/**
 * Implements hook_entity_bundle_create().
 */
function ilr_registrations_entity_bundle_create($entity_type_id, $bundle) {
  // Create an initial store for newly created commerce store types.
  // See https://docs.drupalcommerce.org/commerce2/developer-guide/stores/create-store.
  if ($entity_type_id == 'commerce_store') {
    $address = [
      'country_code' => 'US',
      'address_line1' => '615 Ives Hall',
      'locality' => 'Ithaca',
      'administrative_area' => 'NY',
      'postal_code' => '14850',
    ];

    $store = Store::create([
      'type' => $bundle,
      'uid' => 1,
      'uuid' => '64d69849-b75d-4414-91d8-b0fb1d0fb4cb',
      'name' => 'ILR Store',
      'mail' => 'ilrweb@cornell.edu',
      'address' => $address,
      'default_currency' => 'USD',
    ]);
    $store->save();

    $store_storage = \Drupal::service('entity_type.manager')->getStorage('commerce_store');
    $store_storage->markAsDefault($store);
  }
}
